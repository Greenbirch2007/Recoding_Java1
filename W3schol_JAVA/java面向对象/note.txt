Java 继承


继承是java面向对象编程技术的一块基石，因为它允许创建分级层次的类。


Java 继承
instanceof 关键字
Java 重写(Override)与重载(Overload)
Super关键字的使用
当需要在子类中调用父类的被重写方法时，要使用super关键字。
Java 多态

Java 抽象类

Java 封装

Java 接口

接口(interface)，在java中是一个抽象类型，是抽象方法的集合
，接口通常以interface来声明。一个类通过继承接口的方式，
从而来继承接口的抽象方法


接口与类相似点：

一个接口可以有多个方法。
接口文件保存在.java结尾的文件中，文件名使用接口名。
接口的字节码文件保存在.class结尾的文件中。
接口相应的字节码文件必须在与包名称相匹配的目录结构中。 接口与类的区别：
接口不能用于实例化对象。
接口没有构造方法。
接口中所有的方法必须是抽象方法。
接口不能包含成员变量，除了static和final变量。
接口不是被类继承了，而是要被类实现。
接口支持多重继承。

重写接口中声明的方法时，需要注意以下规则：

类在实现接口的方法时，不能抛出强制性异常，只能在接口中，或者继承接口的抽象类中抛出该强制性异常。
类在重写方法时要保持一致的方法名，并且应该保持相同或者相兼容的返回值类型。
如果实现接口的类是抽象类，那么就没必要实现该接口的方法。
在实现接口的时候，也要注意一些规则：

一个类可以同时实现多个接口。
一个类只能继承一个类，但是能实现多个接口。
一个接口能继承另一个接口，这和类之间的继承比较相似。



接口的多重继承
在Java中，类的多重继承是不合法，但接口允许多重继承，。

在接口的多重继承中extends关键字只需要使用一次，在其后跟着继承接口。 如下所示：

Java 包(package)

java.lang-打包基础的类
java.io-包含输入输出功能的函数

