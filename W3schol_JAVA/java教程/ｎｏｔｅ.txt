

java教程

Java 开发环境配置


Java 基础语法
由 haiguiking 创建，Loen 最后一次修改 2015-09-13
Java 基础语法
一个Java程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。下面简要介绍下类、对象、方法和实例变量的概念


基本语法

１．大小写敏感
２．类名　对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词首字母应该大写，
３．方法名　所有方法名都应该小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写
４．源文件名　　源文件名必须与类名相同。
５．　主方法入口：所有的Java程序由public static void main(String args[])方法开始执行

java标识符

java所有的组成部分都需要名字。类名，变量名以及方法名都被称为标识符。

java修饰符

java可以使用修饰符来修饰类中的方法和属性。主要有两类修饰符

１．访问控制修饰符：default,public,protected,private
2.非访问控制修饰符：final,abstract,static,synchronized,volatile


java变量

java中主要有几种类型的变量：

１．局部变量
２．类变量(静态变量)
３．　成员变量(非静态变量)


java数组

数组是存储在堆上的对象，可保存这多个同类型变量。

java枚举

枚举限制变量只能是预先设定好的值。使用枚举可以减少代码的bug

注意，枚举可以单独声明或声明在类里面。方法，变量，构造函数也可以在枚举中定义

Java注释
类似于C/C++，Java也支持单行以及多行注释。注释中的字符将被Java编译器忽略。

Java 空行
空白行，或者有注释的的行，Java编译器都会忽略掉。


继承

在java中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性和方法，那么你可以将新创建的类继承该类

利用继承的方法，可以重用已经存在类的方法和属性，而不用重写这些代码。被继承的类成为超类(super class)，派生类称为子类(subclass)

接口

在java中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色

接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类

Java 对象和类

对象：对象是类的一个实例，有状态额行为
类：类是一个模板，它描述一类对象的行为和状态

java中的对象

在软件开发中，方法操作对象内部状态的改变，对象的相互调用也是通过方法来完成

java中的类

类可以看成是创建java对象的模板

public class Dog{
    String bread;
    int age;
    String color;
    void barking(){
    }
    
    void hungry(){
    }

    void sleeping(){
    }
}


一个类可以包含以下类型变量：

１．局部变量：在方法，构造方法或语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量会自动销毁
２．成员变量：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法，构造方法和特定类的语句块访问。
３．类变量：类变量也声明在类中，方法体之外，但必须声明为static类型

一个类可以拥有多个方法

构造方法

每个类都有构造方法。如果没有显式地为类定义构造方法，java编译器将会为该类提供一个默认构造方法
在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。

创建对象

对象是根据类创建的。在java中，使用关键字new来创建一个新的对象。创建对象需要以下三步：
１．声明：声明一个对象，包括对象名称和对象类型
２．实例化：使用关键字new来创建一个对象
３．初始化：使用new创建对象时，会调用构造方法初始化对象

访问实例变量和方法
通过已创建的对象来访问成员变量和成员方法

/* 实例化对象 */
ObjectReference = new Constructor();
/* 访问其中的变量 */
ObjectReference.variableName;
/* 访问类中的方法 */
ObjectReference.MethodName();


实例

通过实例展示如何访问实例变量和调用成员方法

源文件声明规则


当在一个源文件中定义多个类，并且还有import语句和package语句时，要特别注意这些规则

１．一个源文件中只能有有一个public类
２．一个源文件可以有多个非public类
３．源文件的名称应该和public类的类名保持一致
４．如果一个类定义在某个包中，那么package语句应该在源文件的首行
５．如果源文件包含import语句，那么应该在package语句和类定义之间。如果没有package语句，那么import语句应该在源文件中最前面
６．import语句和package语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明


类有若干访问级别，并且类也分不同的类型：抽象类和final类等。
除了上面提到的几种类型，java还有一些特殊的类：如内部类，匿名类


java包

包主要用来对类和接口进行分类。当开发java程序时，可能编写成百上千的类，因此很有必要对类和接口进行分类

import语句

在java中，如果给出一个完整的限定名，包括包名，类名，那么java编译器就可以很容易地定位到源代码或类。

import语句就是用来提供一个合理的路径，使得编译器可以找到某个类

例如，下面的命令行将会命令编译器载入java_installation/java/io路径下的所有类

import java.io.*;


Employee类有四个成员变量：name、age、designation和salary。该类显式声明了一个构造方法，该方法只有一个参数。


程序都是从main方法开始执行。为了能运行这个程序，必须包含main方法并且创建一个实例对象。
下面给出EmployeeTest类，该类实例化2个Employee类的实例，并调用方法设置变量的值。

将下面的代码保存在EmployeeTest.java文件中。

Java 基本数据类型

java基本数据类型

变量就是申请内存来存储值。当创建变量的是时候，需要在内存中申请空间。
内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来存储该类型数据
因此，通过定义不同类型的变量，可以在内存中存储整数，小数或字符。

java的两大数据类型

１．内置数据类型
２．引用数据类型

内置数据类型
Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。

实例
对于数值类型的基本类型的取值范围，我们无需强制去记忆，因为它们的值都已经以常量的形式定义在对应的包装类中了。请看下面的例子：

实际上，JAVA中还存在另外一种基本类型void，它也有对应的包装类 java.lang.Void，不过我们无法直接对它们进行操作。

引用类型

１．引用类型变量由类的构造函数创建，可以使用它们访问所引用的对象。这些变量在声明时被指定为一个特定的
类型。变量一旦声明后，类型就能被改版了
２．对象，数组都是引用数据类型
３．所有引用类型的默认值都是null
4.一个引用变量可以用来引用与任何与之兼容的类型

java常量
常量就是一个固定值。它们不需要计算，直接代表相应的值

常量指不能改变的量。在java中用final标志，声明方法和变量类似


虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量
字面量可以赋给任何内置类型的变量

Java 变量类型